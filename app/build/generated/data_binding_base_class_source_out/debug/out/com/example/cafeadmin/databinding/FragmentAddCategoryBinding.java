// Generated by view binder compiler. Do not edit!
package com.example.cafeadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cafeadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddCategoryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addCategoryBtn;

  @NonNull
  public final ImageView addImage;

  @NonNull
  public final EditText category;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final Button selectImageBtn;

  @NonNull
  public final Toolbar toolbar;

  private FragmentAddCategoryBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addCategoryBtn, @NonNull ImageView addImage, @NonNull EditText category,
      @NonNull TextView errorMessage, @NonNull Button selectImageBtn, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addCategoryBtn = addCategoryBtn;
    this.addImage = addImage;
    this.category = category;
    this.errorMessage = errorMessage;
    this.selectImageBtn = selectImageBtn;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCategoryBtn;
      Button addCategoryBtn = ViewBindings.findChildViewById(rootView, id);
      if (addCategoryBtn == null) {
        break missingId;
      }

      id = R.id.addImage;
      ImageView addImage = ViewBindings.findChildViewById(rootView, id);
      if (addImage == null) {
        break missingId;
      }

      id = R.id.category;
      EditText category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.errorMessage;
      TextView errorMessage = ViewBindings.findChildViewById(rootView, id);
      if (errorMessage == null) {
        break missingId;
      }

      id = R.id.selectImageBtn;
      Button selectImageBtn = ViewBindings.findChildViewById(rootView, id);
      if (selectImageBtn == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentAddCategoryBinding((ConstraintLayout) rootView, addCategoryBtn, addImage,
          category, errorMessage, selectImageBtn, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
