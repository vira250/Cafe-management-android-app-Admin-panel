// Generated by view binder compiler. Do not edit!
package com.example.cafeadmin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cafeadmin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText password;

  @NonNull
  public final ProgressBar progressbar;

  @NonNull
  public final TextView redirectTextSignUp;

  @NonNull
  public final TextView textDonHaveAccount;

  @NonNull
  public final TextView textSignIn;

  @NonNull
  public final Toolbar toolbar;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button button,
      @NonNull EditText email, @NonNull EditText password, @NonNull ProgressBar progressbar,
      @NonNull TextView redirectTextSignUp, @NonNull TextView textDonHaveAccount,
      @NonNull TextView textSignIn, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.button = button;
    this.email = email;
    this.password = password;
    this.progressbar = progressbar;
    this.redirectTextSignUp = redirectTextSignUp;
    this.textDonHaveAccount = textDonHaveAccount;
    this.textSignIn = textSignIn;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.progressbar;
      ProgressBar progressbar = ViewBindings.findChildViewById(rootView, id);
      if (progressbar == null) {
        break missingId;
      }

      id = R.id.redirectTextSignUp;
      TextView redirectTextSignUp = ViewBindings.findChildViewById(rootView, id);
      if (redirectTextSignUp == null) {
        break missingId;
      }

      id = R.id.textDonHaveAccount;
      TextView textDonHaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (textDonHaveAccount == null) {
        break missingId;
      }

      id = R.id.textSignIn;
      TextView textSignIn = ViewBindings.findChildViewById(rootView, id);
      if (textSignIn == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, button, email, password,
          progressbar, redirectTextSignUp, textDonHaveAccount, textSignIn, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
